---
- name: Determine package name
  set_fact:
    _gpg_package: gpg
  when:
    (ansible_distribution == 'Debian' and ansible_distribution_major_version is version('9','>') or
    ansible_distribution == 'Ubuntu' and ansible_distribution_major_version is version('16','>'))

- name: Install dependencies
  apt:
    name: "{{ _gpg_package|default('gnupg') }}"

- name: Install gpg-agent on new distros
  apt:
    name: gpg-agent
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version is version('11','>=')

- name: Add Docker GPG Key
  apt_key:
    url: "{{ docker_url }}/gpg"

- name: Ensure Docker APT repo is present
  apt_repository:
    repo: "{{ docker_apt_repo }}"

- name: Gather packages facts
  package_facts:
    manager: apt

- name: Check running instances before install/upgrade
  shell: |
    set -o pipefail
    docker ps -q | sort
  register: before
  changed_when: false
  when:
    - "'docker-ce' in ansible_facts.packages"
    - docker_check_running
  args:
    executable: /bin/bash

- name: Unhold docker version for install
  command: apt-mark unhold docker-ce
  changed_when: false

- name: Install / update docker
  apt:
    name: "{{ docker_version }}"
    update_cache: true
  notify: restart docker

- name: Hold docker version for install
  command: apt-mark hold docker-ce
  when: docker_version_lock
  changed_when: false

- name: Make sure docker is running
  systemd:
    name: docker
    state: started
    enabled: true

- block:
    - name: Check running instances after restart
      shell: |
        set -o pipefail
        docker ps -q | sort
      register: after
      changed_when: false
      args:
        executable: /bin/bash

    - name: Compare lists of instances
      fail:
        msg: |
          List of instances is not the same as before restart.
          Before:
          {{ before.stdout }}
          After:
          {{ after.stdout }}
      when:
        - before.stdout is defined
        - before.stdout != after.stdout
  when: docker_check_running

- name: Create config dir if not present
  file:
    state: directory
    path: /etc/docker/
    mode: 0755

- name: Deploy docker daemon template
  template:
    src: etc/docker/daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: 0644
  notify: restart docker

- include_tasks: cleaning.yml
